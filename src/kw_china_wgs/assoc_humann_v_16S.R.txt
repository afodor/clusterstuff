##find correlations between humann (unlogged) and 16S
##9/8/16

rm(list=ls())
library(Kendall)

setwd("C:\\Users\\kwinglee.cb3614tscr32wlt\\Documents\\Fodor\\China\\WGS")

humdir = "C:\\Users\\kwinglee.cb3614tscr32wlt\\Documents\\Fodor\\China\\humann\\"
microdir = "C:\\Users\\kwinglee.cb3614tscr32wlt\\Documents\\Fodor\\China\\"

humlevels = c("module", "pathway")
microlevels = c("phylum", "class", "order", "family", "genus", "otu")

##get OTU taxonomy for the given OTU name
taxonomy = read.table("C:\\Users\\kwinglee.cb3614tscr32wlt\\Documents\\Fodor\\China\\abundantOTU.chinaForward.taxonomy.txt", header=F, colClasses="character", sep="\t")
##function that returns full taxonomy for the given name in the given level
getOTUTaxonomy <- function(name) {
  n = sub("X", "", name)
  n = paste("Consensus", n, sep="")
  r = taxonomy$V1==n
  n = sub("Consensus", "OTU", n)
  return(paste("p_", taxonomy$V6[r], ";c_", taxonomy$V9[r], ";o_", taxonomy$V12[r], ";f_", taxonomy$V15[r], ";g_", taxonomy$V18[r], ";", n, sep=""))
}

runComparisons <- function(table, splitCol, name, desc) {
  len = (splitCol-2) * (ncol(table)-splitCol)
  namesKEGG = rep(NA, len)
  description = rep(NA, len)
  namesMicrobiome = rep(NA, len)
  r = rep(NA, len)
  pValues = rep(NA, len)
  kendallP = rep(NA, len)
  
  index = 1
  
  pdf(paste("assoc_plots_", name, ".pdf",sep=""))
  
  for(i in 3:splitCol) {
    if(sum(table[,i] >0 ) > nrow(table) /4) {
      for (j in (splitCol+1):ncol(table)) {
        if(sum(table[,j] >0 ) > nrow(table) /4) {
          namesKEGG[index] <- names(table)[i]
          namesMicrobiome[index] <- names(table)[j]
          description[index] <- desc$NAME[desc$sampleID==namesKEGG[index]]
          
          r[index] <- cor( table[,i], table[,j], method="spearman")
          aLm <- lm(table[,i] ~ table[,j])
          pValues[index] <- anova(aLm)$"Pr(>F)"[1]
          kendallP[index] <- Kendall(table[,i], table[,j])$sl[1]
          
          if(pValues[index] < 0.05 ) { 
            myText <- paste(namesKEGG[index], " vs. " ,namesMicrobiome[index] ,"\n", "p=" ,  
                            format(	pValues[index] , digits=3), "r=", 
                            format( r[index], digits=3), "kendall p=" , 
                            format( kendallP[index], digits=3)) 
            plot(table[,j],table[,i] , main=myText, pch=16, xlab=namesMicrobiome[index], ylab=namesKEGG[index],
                 col = ifelse(table$ruralUrban == "rural", "blue", "red"))
            abline(aLm)
          }
          
          index <- index + 1
        }
      }
    }
  }
  
  dev.off()
  dFrame <- data.frame(namesKEGG, description, namesMicrobiome,kendallP, pLM=pValues, spearman=r) 
  dFrame <- dFrame[1:(index-1),]
  dFrame <- dFrame [order(dFrame$pLM),]
  dFrame$adjKendallP <-  p.adjust(dFrame$kendallP, method = "BH")
  dFrame$adjLMp<-  p.adjust(dFrame$pLM, method = "BH")
  
  write.table( file= paste("assoc_pValues_", name, ".txt", sep=""), dFrame, row.names=FALSE, sep="\t")
}

for(h in humlevels) {
  print(h)
  ##get table and description
  file = paste(humdir, "humann_keggAsCol_withRurUrb_", h, ".txt", sep="")
  humtable = read.table(file, header=T, sep="\t")
  hncol = ncol(humtable)
  humtable = read.table(file, header=T, sep="\t", colClasses=c(rep("character", 2), rep("numeric", hncol-2)))
  
  desc = read.table(paste(humdir, "humann_keggAsRow_", h, ".txt", sep=""), sep="\t", quote="", 
                    header=T, stringsAsFactors = F)
  
  ##remove unneeded columns
  humtable = humtable[,-(3:6)]
  hncol = ncol(humtable)
  
  for(m in microlevels) {
    print(paste(" ", m))
    ##get table and description
    inFileName = paste(microdir, "RDP\\", m,  "_taxaAsColumnsLogNorm_WithMetadata.txt", sep ="")
    if(m=="otu") {
      inFileName = paste(microdir, "abundantOTUForwardTaxaAsColumnsLogNormalWithMetadata.txt", sep="")
    }
    mtable <-read.table(inFileName,header=TRUE,sep="\t")
    mncol <- ncol(mtable)
    cc <- c(rep("character",5), rep("numeric", mncol-5))
    if(m=="otu") { #missing read number
      cc <- c(rep("character",4), rep("numeric", mncol-4))
    }
    mtable <-read.table(inFileName,header=TRUE,sep="\t",colClasses=cc)
    
    ##only the forward reads; remove this column if not otu table
    if(m != "otu") {
      mtable = mtable[mtable$readNumber=="1",-2]
    }
    
    ##wgs are only first timepoint
    mtable = mtable[mtable$timepoint == "first_A",]
    
    ##convert sample IDs to numeric like metadata and metabolon
    mtable$sampleID = sub("_1", "", mtable$sampleID)
    
    ##remove all columns except sampleID and rural urban
    mtable = mtable[,-c(2, 4)]
    
    ##get OTU taxonomy and remove extra columns
    if(m == "otu") {
      mtable = mtable[,-(3:5)]
      names = sapply(names(mtable)[-(1:2)], getOTUTaxonomy, USE.NAMES = F)
      names(mtable)[-(1:2)] = names
    }
    
    mrg = merge(humtable, mtable, by=c("sampleID", "ruralUrban"))
    runComparisons(mrg, hncol, paste("humann_unlog_", h, "_v_16S_", m, sep=""), desc)
  }
}