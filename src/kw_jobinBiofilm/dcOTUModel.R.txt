##linear model for DC dataset
##11/24/15

rm(list=ls())

library("pscl")
library("lmtest")
library("nlme")

setwd("C:\\Users\\kwinglee.cb3614tscr32wlt\\Documents\\Fodor\\JobinCollaboration\\biofilm\\rdpResults\\DC")

taxaLevels <- c("phylum","class","order","family","genus")

for(taxa in taxaLevels ) {
  print(taxa)
  fname = paste("dc_", taxa, "_taxaAsCol_noApcMin_logNorm.txt", sep="")
  table = read.table(fname, sep="\t", header=T, comment.char="")
  numCols = ncol(table)
  cc = c(rep(c("numeric", "character"),4), rep("numeric", 4), rep("character", 3), rep("numeric", numCols-15))
  table = read.table(fname, sep="\t", header=T, comment.char="", na.strings="N/A", colClasses=cc)

  ##output vectors
  names = vector()
  meanTaxa = vector()
  pTime = vector()
  pGroup = vector()
  pCage = vector()
  index = 1
  pdf(paste("dc_otuModel_boxplots_", taxa, ".pdf", sep=""), height = 10)
  
  for( i in 18:numCols) {
    if(sum(table[,i] != 0 ) > nrow(table) / 4 ) {
      
      names[index] <- names(table)[i]
      bug <- table[,i]
      meanTaxa[index] <- mean(bug)
      time <- table$Timepoint..weeks.
      group <- factor(table$Group..Associated.with.)
      cage <- paste(table$Group..Associated.with., table$Cage.Number, sep=":")
      mouse <- table$Mouse..
      
      myFrame <- data.frame(bug, time, group, cage, mouse)
      
#       for order, i=48, throws error:
#         Error in gls(bug ~ time + group, method = "REML", correlation = corCompSymm(form = ~1 |  : 
#        false convergence (8)
#       fullModel <- gls(bug~time+group, method="REML",correlation=corCompSymm(form=~1|cage),
#                         data = myFrame )
      
      reducedModel <- gls(bug~time+group, method="REML",	data = myFrame )
      
      fullModelLME <- lme(bug~time+group, method="REML", random = ~1|cage, data = myFrame)		
      
      pTime[index] <- anova(fullModelLME)$"p-value"[2]
      pGroup[index] <- anova(fullModelLME)$"p-value"[3]
      pCage[index] <- anova(fullModelLME, reducedModel)$"p-value"[2]
      # intraclassCoefficient<- coef(fullModel$modelStruct[1]$corStruct,unconstrained=FALSE)[[1]]
      
      ##plots
      graphMain =  paste( names[index], 
                          ":\n pTime=", format(pTime[index], digits=3), 
                          "; pGroup= ", format(pGroup[index],digits=3), 
                          "; pCage= ", format(pCage[index], digits=3), sep="") #"\n",
                          # " icc= " , format( intraclassCoefficient, digits=3 ), sep="")
      
     
      ##color by group
      groups = sort(unique(table$Group..Associated.with.)) #[1] "BF-bx"   "BF+bx"   "BF+NF"   "BF+T #1" "BF+T #2" "BF+T #3"
      col = c("blue", "red", "green", "gold", "purple", "black")
      colors = rep(NA, nrow(table))
      for(i in 1:length(groups)) {
        colors[table$Group..Associated.with.==groups[i]] = col[i]
      }
      ##shape by time; inoculum is time 0
      times = sort(unique(table$Timepoint..weeks.))
      sh = c(15, 16, 17, 18, 9, 11)
      shapes = rep(NA, nrow(table))
      for(i in 1:length(times)) {
        shapes[table$Timepoint..weeks.==times[i]] = sh[i]
      }
      
      ##additional variables
      sex <- factor(table$Sex)
      mouse <- factor(paste(cage, table$Mouse.., sep=":"))
      
      par(mfrow=c(3,2), oma=c(.5,.5,5,.5), mar=c(4.5,4,1,1))
      ##group
      boxplot(bug~group, xlab="", ylab="relative abundance", las=2, main="group")
      points(bug~group, col=colors, pch=shapes)
      ##time
      plot(x=time, y=bug, xlab="weeks", ylab="relative abundance", main="time", col=colors, pch=shapes)
      ##cage
      boxplot(bug~factor(cage), xlab="", ylab="relative abundance", las=2, main="cage")
      points(bug~factor(cage), col=colors, pch=shapes)
      ##mouse
      boxplot(bug~mouse, xlab="", ylab="relative abundance", las=2, main="mouse")
      points(bug~mouse, col=colors, pch=shapes)
      ##sex
      boxplot(bug~sex, xlab="", ylab="relative abundance", main="sex")
      points(bug~sex, col=colors, pch=shapes)
      
      ##add title
      par(oma=c(0,0,0,0), mar=c(0,0,0,0), new=T, xpd=T, fig=c(0,1,0,1))
      plot(0,0,type="n", bty="n", xaxt="n", yaxt="n")
      legend("top", horiz=T, legend=graphMain, cex=1.2, bty="n")
      
      index=index+1
      
    }
  }
  
  dFrame <- data.frame(names, meanTaxa, pGroup, pTime, pCage)
  dFrame$pAdjGroup <- p.adjust(dFrame$pGroup, method = "BH")
  dFrame$pAdjTime <- p.adjust(dFrame$pTime, method = "BH")
  dFrame$pAdjCage <- p.adjust(dFrame$pCage, method="BH")
  dFrame <- dFrame[order(dFrame$pGroup),]
  write.table(dFrame, file=paste("dc_otuModel_pValues_", taxa, ".txt",sep=""), sep="\t",row.names=FALSE)
  dev.off()
}