##stacked bar chart at phylum level of dolphin data
##3/29/16

rm(list=ls())
setwd("C:\\Users\\kwinglee.cb3614tscr32wlt\\Documents\\Fodor\\JobinCollaboration\\dolphin\\rdpResults")

library(reshape2)
library(ggplot2)
library(RColorBrewer)
library(cowplot)

cutoff = 0.005 #cutoff of ave rel abun to include in figure
print(cutoff)

##25 color palette
c25 <- c("dodgerblue2","#E31A1C", # red
         "green4",
         "#6A3D9A", # purple
         "#FF7F00", # orange
         "black","gold1",
         "skyblue2","#FB9A99", # lt pink
         "palegreen2",
         "#CAB2D6", # lt purple
         "#FDBF6F", # lt orange
         "gray70", "khaki2",
         "maroon","orchid1","deeppink1","blue1","steelblue4",
         "darkturquoise","green1","yellow4","yellow3",
         "darkorange4","brown") #from http://stackoverflow.com/questions/9563711/r-color-palettes-for-many-data-classes

##function to draw bar plot for given table and body site
##draw legend if incLegend is true
drawPlot <- function(table, site, incLegend) {
  abun = table[table$BODY.SITE.SAMPLED==site,]
  abun = abun[,-c(1,3:12)]
  names(abun)[1] = "animalID"
  # relMelt = melt(relAbun, id.vars="sampleID")
  relMelt = melt(abun, id.vars="animalID")
  colorCount = ncol(abun)-1
  # colors = rainbow(colorCount)
  #   colors = terrain.colors(colorCount)
  #   colors = topo.colors(colorCount)
  colors = c25[1:colorCount]
  plot = ggplot(relMelt, aes(x=animalID, y=value, fill=variable)) + 
    geom_bar(stat="identity") + 
    # scale_fill_brewer(palette="PiYG") +
    # scale_fill_hue(h=c(0, 360), c=50, l=70) +
    scale_fill_manual(values=colors) +
    ylim(0,1) +
    ggtitle(site) +
    labs(x="", y = "relative abundance") +
    theme(axis.text.x = element_text(angle=90, hjust=1, size=18),
          plot.title = element_text(size=30),
          axis.text.y = element_text(size=20),
          axis.title = element_text(size=20))
  if(!incLegend) {
    plot = plot + guides(fill=F)
  } else {
    plot = plot +
      theme(legend.title=element_text(size=22), legend.text=element_text(size=22), legend.key.height=unit(30, "points"), legend.key.width=unit(20, "points"))
  }
  return(plot)
}

##get metadata, fix water
metadata = read.table("..\\dolphinMetadata_withSampleID.txt", sep="\t", fill=T, header=T, comment.char="", colClasses="character")
metadata$BODY.SITE.SAMPLED[grepl("W", metadata$BODY.SITE.SAMPLED)] = "W"
metadata$ANIMAL.ID[grepl("W", metadata$BODY.SITE.SAMPLED)] = sub("Water Sample", "", metadata$ANIMAL.ID[grepl("W", metadata$BODY.SITE.SAMPLED)])

taxaLevels = c("phylum", "class", "order", "family", "genus")

for(taxa in taxaLevels) {
  print(taxa)
  fname = paste("dolphin_", taxa, "_taxaAsCol.txt", sep="")
  table = read.table(fname, sep="\t", header=T)
  nc = ncol(table)
  table = read.table(fname, sep="\t", header=T, colClasses=c(rep("character",3), rep("numeric", nc-3)))
  
  ##R1 only
  table = table[table$read=="R1",]
  
  ##convert to rel abun
  rel.abun = table[,-c(1:3)] / rowSums(table[,-c(1:3)])
  # rowSums(rel.abun)
  
  ##filter top 20 and sort by top 20
  means = colMeans(rel.abun)
  ra = rel.abun[,order(means, decreasing=T)]
  top20 = ra[,1:20]
  cut = ra[,colMeans(ra) > cutoff]
  nc = ncol(cut)
  print(nc)
  other = rowSums(ra[,(nc+1):ncol(ra)])
  cut = cbind(cut, other)
  rowSums(cut)
  
  ##add metadata 
  relAbun = cbind(sampleID=table[,2], cut)
  relMeta = merge(metadata, relAbun, by="sampleID")
  
  
  
  a = drawPlot(relMeta, "A", F)
  b = drawPlot(relMeta, "B", F)
  c = drawPlot(relMeta, "C", F)
  d = drawPlot(relMeta, "D", F)
  e = drawPlot(relMeta, "E", F)
  f = drawPlot(relMeta, "F", F)
  w = drawPlot(relMeta, "W", T)
  
  
  comb = ggdraw() +
    draw_plot(a, x=0, y=.5, width=.25, height=.5) +
    draw_plot(b, x=.25, y=.5, width=.25, height=.5) +
    draw_plot(c, x=.5, y=.5, width=.25, height=.5) +
    draw_plot(d, x=.75, y=.5, width=.25, height=.5) +
    draw_plot(e, x=0, y=0, width=.25, height=.5) +
    draw_plot(f, x=.25, y=0, width=.25, height=.5) +
    draw_plot(w, x=.5, y=.025, width=.4, height=.475)
  
  if(nc > 20) { #legend becomes two rows
    comb = ggdraw() +
      draw_plot(a, x=0, y=.5, width=.25, height=.5) +
      draw_plot(b, x=.25, y=.5, width=.25, height=.5) +
      draw_plot(c, x=.5, y=.5, width=.25, height=.5) +
      draw_plot(d, x=.75, y=.5, width=.25, height=.5) +
      draw_plot(e, x=0, y=0, width=.25, height=.5) +
      draw_plot(f, x=.25, y=0, width=.25, height=.5) +
      draw_plot(w, x=.5, y=.025, width=.5, height=.475)
  }
  
  jpeg(paste("dolphinBarPlot_", taxa, "_", cutoff, ".jpeg", sep=""), width=2000, height=2000)
  print(comb)
  dev.off()
}