##log normalize  and relative abundance minikraken results
##12/16/16

rm(list=ls())

setwd("C:\\Users\\kwinglee.cb3614tscr32wlt\\Documents\\Fodor\\Machine Learning")

datasets = c("IBD\\ibd", "Cirrhosis\\cirrhosis", "Colorectal\\colorectal", "HMP\\hmp", "Obesity\\obesity",
             "WT2D\\wt2d", "T2D\\t2d")
# datasets = "HMP\\hmp"

taxaLevels = c("domain", "phylum", "class", "order", "family", "genus", "species")

for(ds in datasets) {
  print(ds)
  meta = read.table(paste(ds, "_minikraken_merged_metadata.txt", sep=""), sep="\t", header=T, stringsAsFactors = F)
  meta$disease = sub(".extra", "", meta$disease)
  meta = meta[meta$disease != "null",]
  start = ncol(meta) + 1 #first count column
  for(taxa in taxaLevels) {
    print(taxa)
    table = read.table(paste(ds, "_minikraken_merged_", taxa, ".txt", sep=""), 
                       sep="\t", header=T, stringsAsFactors = F, comment.char = "", quote="")
    table = table[,-2] #remove full taxonomy
    
    ##transpose
    tname = paste(ds, "_minikraken_merged_taxaAsCol_", taxa, ".txt", sep="")
    write.table(t(table),tname, sep="\t", row.names = T, col.names = F, quote=F)
    table = read.table(tname, sep="\t", header=T, stringsAsFactors = F, comment.char = "", quote="")
    
    ##remove zeros
    nozero = rowSums(table[,-1]) != 0
    print(paste("removed", table$taxa[(!nozero)]))
    table = table[nozero,]
    
    ##add metadata
    names(table)[1] = "sampleID"
    #meta$sampleID = gsub("-", ".", meta$sampleID) #R messed up dashes
    table$sampleID = gsub(".", "-", table$sampleID, fixed=T) #R messed up dashes
    if(all(grepl("^X", table$sampleID))) {
      table$sampleID = sub("X", "", table$sampleID)
    }
    mrg = merge(meta, table, by="sampleID")
    write.table(mrg, paste(ds, "_minikraken_merged_taxaAsCol_withMeta_", taxa, ".txt", sep=""),
                sep="\t", row.names = F, col.names = T, quote=F)
    
    ##relative abundance
    relabun = mrg
    nc = ncol(mrg)
    n = rowSums(mrg[,start:nc]) #number of reads in each sample
    N = nrow(mrg) #total number of samples
    for(col in start:nc) {
      for(row in 1:N) {
        relabun[row, col] = mrg[row, col]/n[row]
      }
    }
    write.table(relabun, paste(ds, "_minikraken_merged_relabun_", taxa, ".txt", sep=""),
                row.names = F, col.names = T, quote = F, sep="\t")
    
    ##log normalize
    lognorm = mrg
    nc = ncol(lognorm)
    n = rowSums(mrg[,start:nc]) #number of reads in each sample
    sumX = sum(n) #total number of reads in all samples 
    N = nrow(mrg) #total number of samples
    for(col in start:nc) {
      for(row in 1:N) {
        lognorm[row, col] = log10(mrg[row, col]/n[row] * sumX/N + 1)
      }
    }
    write.table(lognorm, paste(ds, "_minikraken_merged_lognorm_", taxa, ".txt", sep=""),
                row.names = F, col.names = T, quote = F, sep="\t")
  }
}